name: HTTP
version: 4000.2.20
id: HTTP-4000.2.20-c3a348111c56b64fc7beadcf02c11c20
key: HTTP_3YNMnvUnzxnFVrnBgJzdLu
license: BSD3
maintainer: Ganesh Sittampalam <ganesh@earth.li>
homepage: https://github.com/haskell/HTTP
synopsis: A library for client-side HTTP
description:
    The HTTP package supports client-side web programming in Haskell. It lets you set up
    HTTP connections, transmitting requests and processing the responses coming back, all
    from within the comforts of Haskell. It's dependent on the network package to operate,
    but other than that, the implementation is all written in Haskell.
    .
    A basic API for issuing single HTTP requests + receiving responses is provided. On top
    of that, a session-level abstraction is also on offer  (the @BrowserAction@ monad);
    it taking care of handling the management of persistent connections, proxies,
    state (cookies) and authentication credentials required to handle multi-step
    interactions with a web server.
    .
    The representation of the bytes flowing across is extensible via the use of a type class,
    letting you pick the representation of requests and responses that best fits your use.
    Some pre-packaged, common instances are provided for you (@ByteString@, @String@).
    .
    Here's an example use:
    .
    >
    >    do
    >      rsp <- Network.HTTP.simpleHTTP (getRequest "http://www.haskell.org/")
    >              -- fetch document and return it (as a 'String'.)
    >      fmap (take 100) (getResponseBody rsp)
    >
    >    do
    >      (_, rsp)
    >         <- Network.Browser.browse $ do
    >               setAllowRedirects True -- handle HTTP redirects
    >               request $ getRequest "http://www.haskell.org/"
    >      return (take 100 (rspBody rsp))
category: Network
author: Warrick Gray <warrick.gray@hotmail.com>
exposed: True
exposed-modules:
    Network.BufferType Network.Stream Network.StreamDebugger
    Network.StreamSocket Network.TCP Network.HTTP Network.HTTP.Headers
    Network.HTTP.Base Network.HTTP.Stream Network.HTTP.Auth
    Network.HTTP.Cookie Network.HTTP.Proxy Network.HTTP.HandleStream
    Network.Browser
hidden-modules: Network.HTTP.Base64 Network.HTTP.MD5Aux
                Network.HTTP.Utils Paths_HTTP
trusted: False
import-dirs: /Users/touyou/.cabal/lib/x86_64-osx-ghc-7.10.1/HTTP_3YNMnvUnzxnFVrnBgJzdLu
library-dirs: /Users/touyou/.cabal/lib/x86_64-osx-ghc-7.10.1/HTTP_3YNMnvUnzxnFVrnBgJzdLu
data-dir: /Users/touyou/.cabal/share/x86_64-osx-ghc-7.10.1/HTTP-4000.2.20
hs-libraries: HSHTTP-4000.2.20-3YNMnvUnzxnFVrnBgJzdLu
depends:
    array-0.5.1.0-e29cdbe82692341ebb7ce6e2798294f9
    base-4.8.0.0-9015e10d2b2b0f71f570c3f2bbe09c8a
    bytestring-0.10.6.0-3ca2b1049f8b29ce68d75c9a9933b807
    mtl-2.2.1-9986828fc95bc8459870303efaabd81e
    network-2.6.2.1-2335a83a5f9f7321ab5214f23139ce0d
    network-uri-2.6.0.3-d7b04621780743ed2bba7c05276bf8ce
    old-time-1.1.0.3-1a15ebc3ce42622f5881a71dae39e7ac
    parsec-3.1.9-9695e61cda8f5b8163ada967197eb42e
haddock-interfaces: /Users/touyou/.cabal/share/doc/x86_64-osx-ghc-7.10.1/HTTP-4000.2.20/html/HTTP.haddock
haddock-html: /Users/touyou/.cabal/share/doc/x86_64-osx-ghc-7.10.1/HTTP-4000.2.20/html
