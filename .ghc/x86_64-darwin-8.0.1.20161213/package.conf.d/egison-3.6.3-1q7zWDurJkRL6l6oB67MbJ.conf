name: egison
version: 3.6.3
id: egison-3.6.3-1q7zWDurJkRL6l6oB67MbJ
key: egison-3.6.3-1q7zWDurJkRL6l6oB67MbJ
license: MIT
maintainer: Satoshi Egi <egi@egison.org>
homepage: http://www.egison.org
synopsis: Programming language with non-linear pattern-matching against non-free data
description:
    An interpreter for Egison, a **pattern-matching-oriented**, purely functional programming language.
    We can directly represent pattern-matching against lists, multisets, sets, trees, graphs and any kind of data types.
    .
    We can find Egison programs in @lib@ and @sample@ directories.
    This package also include Emacs Lisp file @elisp/egison-mode.el@.
    .
    We can do non-linear pattern-matching against non-free data types in Egison.
    An non-free data type is a data type whose data have no canonical form, a standard way to represent that object.
    It enables us to write elegant programs.
    .
    /Twin Primes/
    .
    We can use pattern-matching for enumeration.
    The following code enumerates all twin primes from the infinite list of prime numbers with pattern-matching!
    .
    <<https://raw.githubusercontent.com/egison/egison/master/images/twin-primes-w700.png>>
    .
    /Poker Hands/
    .
    The following code is the program that determines poker-hands written in Egison.
    All hands are expressed in a single pattern.
    .
    <<https://raw.githubusercontent.com/egison/egison/master/images/poker-hands-w700.png>>
    .
    /Mahjong/
    .
    We can write a pattern even against mahjong tiles.
    We modularize patterns to represent complex mahjong hands.
    .
    <<https://raw.githubusercontent.com/egison/egison/master/images/mahjong-w700.png>>
    .
    /Graphs/
    .
    We can pattern-match against graphs.
    We can write program to solve the travelling salesman problem in a single pattern-matching expression.
    .
    <<https://raw.githubusercontent.com/egison/egison/master/images/salesman-w700.png>>
    .
    Aren't thsese exciting?
    We can run these demonstrations on our website!
    Please view and try more demonstrations!
    .
    <http://www.egison.org>
    .
    Egison makes programming dramatically simple.
    Please enjoy Egison!
category: Compilers/Interpreters
author: Satoshi Egi, Ryo Tanaka, Takahisa Watanabe, Kentaro Honda
exposed: True
exposed-modules:
    Language.Egison Language.Egison.Core Language.Egison.Desugar
    Language.Egison.Types Language.Egison.Parser
    Language.Egison.Primitives Language.Egison.Util
hidden-modules: Paths_egison
abi: 7ff71a20e564fed254fc117fe7d5399a
trusted: False
import-dirs: /Users/touyou/.cabal/lib/x86_64-osx-ghc-8.0.1.20161213/egison-3.6.3-1q7zWDurJkRL6l6oB67MbJ
library-dirs: /Users/touyou/.cabal/lib/x86_64-osx-ghc-8.0.1.20161213/egison-3.6.3-1q7zWDurJkRL6l6oB67MbJ
dynamic-library-dirs: /Users/touyou/.cabal/lib/x86_64-osx-ghc-8.0.1.20161213
data-dir: /Users/touyou/.cabal/share/x86_64-osx-ghc-8.0.1.20161213/egison-3.6.3
hs-libraries: HSegison-3.6.3-1q7zWDurJkRL6l6oB67MbJ
depends:
    array-0.5.1.1 base-4.9.1.0 containers-0.5.7.1 directory-1.3.0.0
    ghc-8.0.1.20161213 ghc-paths-0.1.0.9-AhaDlGOsRAepox069XzG
    haskeline-0.7.3.0 mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
    parsec-3.1.11-KfZohCLhCERHHaWU51ma7a process-1.4.3.0
    random-1.1-9tceXaeYIMZ4JrKq20Egog
    regex-tdfa-1.2.2-Iyydtuto3BPFN2sCCgpgJb
    text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li transformers-0.5.2.0
    unordered-containers-0.2.7.1-FXivz6eArVTIZu3SG4zfX2
    vector-0.11.0.0-HhutbadagxHIONIkSRJEug
haddock-interfaces: /Users/touyou/.cabal/share/doc/x86_64-osx-ghc-8.0.1.20161213/egison-3.6.3/html/egison.haddock
haddock-html: /Users/touyou/.cabal/share/doc/x86_64-osx-ghc-8.0.1.20161213/egison-3.6.3/html
